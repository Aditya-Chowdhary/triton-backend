// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: token.sql

package database

import (
	"context"
)

const deleteTokenByToken = `-- name: DeleteTokenByToken :exec
DELETE FROM tokens
WHERE token = $1
`

func (q *Queries) DeleteTokenByToken(ctx context.Context, token string) error {
	_, err := q.db.Exec(ctx, deleteTokenByToken, token)
	return err
}

const getNewAccessTokenByRefreshToken = `-- name: GetNewAccessTokenByRefreshToken :one
SELECT new_access_token
FROM tokens
WHERE refresh_token = $1 AND is_valid = true
`

func (q *Queries) GetNewAccessTokenByRefreshToken(ctx context.Context, refreshToken string) (string, error) {
	row := q.db.QueryRow(ctx, getNewAccessTokenByRefreshToken, refreshToken)
	var new_access_token string
	err := row.Scan(&new_access_token)
	return new_access_token, err
}
