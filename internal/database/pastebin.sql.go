// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: pastebin.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createPastebin = `-- name: CreatePastebin :one
INSERT INTO pastebin (user_uuid, title, content, url_uuid, extension)
VALUES ($1, $2, $3, $4, $5)
RETURNING user_uuid, created_at, title, content, url_uuid, extension
`

type CreatePastebinParams struct {
	UserUuid  uuid.UUID `json:"user_uuid"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	UrlUuid   uuid.UUID `json:"url_uuid"`
	Extension string    `json:"extension"`
}

func (q *Queries) CreatePastebin(ctx context.Context, arg CreatePastebinParams) (Pastebin, error) {
	row := q.db.QueryRow(ctx, createPastebin,
		arg.UserUuid,
		arg.Title,
		arg.Content,
		arg.UrlUuid,
		arg.Extension,
	)
	var i Pastebin
	err := row.Scan(
		&i.UserUuid,
		&i.CreatedAt,
		&i.Title,
		&i.Content,
		&i.UrlUuid,
		&i.Extension,
	)
	return i, err
}

const getPastebin = `-- name: GetPastebin :one
SELECT p.user_uuid, p.title, p.content, p.extension
FROM pastebin p
INNER JOIN url u
ON p.url_uuid = u.url_uuid
WHERE u.url_name = $1::text
`

type GetPastebinRow struct {
	UserUuid  uuid.UUID `json:"user_uuid"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	Extension string    `json:"extension"`
}

func (q *Queries) GetPastebin(ctx context.Context, url string) (GetPastebinRow, error) {
	row := q.db.QueryRow(ctx, getPastebin, url)
	var i GetPastebinRow
	err := row.Scan(
		&i.UserUuid,
		&i.Title,
		&i.Content,
		&i.Extension,
	)
	return i, err
}
